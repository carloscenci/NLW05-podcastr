{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/carlos/Documentos/NLW5 - 2021/react/NLW05-podcastr/src/components/Player/index.tsx\",\n    _s = $RefreshSig$();\n\nimport Image from 'next/image';\nimport { useContext, useRef, useEffect, useState } from 'react';\nimport Slider from 'rc-slider';\nimport 'rc-slider/assets/index.css';\nimport { PlayerContext } from '../../contexts/PlayerContext';\nimport styles from './styles.module.scss';\nimport { convertDurationToTimeString } from '../../utils/convertDurationToTimeString';\nexport function Player() {\n  _s();\n\n  var _episode$duration;\n\n  var audioRef = useRef(null);\n\n  var _useState = useState(0),\n      progress = _useState[0],\n      setProgress = _useState[1];\n\n  var _useContext = useContext(PlayerContext),\n      episodeList = _useContext.episodeList,\n      currentEpisodeIndex = _useContext.currentEpisodeIndex,\n      isPlaying = _useContext.isPlaying,\n      togglePlay = _useContext.togglePlay,\n      setPlayingState = _useContext.setPlayingState,\n      playNext = _useContext.playNext,\n      playPrevious = _useContext.playPrevious,\n      hasNext = _useContext.hasNext,\n      hasPrevious = _useContext.hasPrevious,\n      isLooping = _useContext.isLooping,\n      toggleLoop = _useContext.toggleLoop,\n      isShuffling = _useContext.isShuffling,\n      toggleShuffle = _useContext.toggleShuffle;\n\n  useEffect(function () {\n    if (!audioRef.current) {\n      return;\n    }\n\n    if (isPlaying) {\n      audioRef.current.play();\n    } else {\n      audioRef.current.pause();\n    }\n  }, [isPlaying]);\n\n  function setupProgressListener() {\n    audioRef.current.currentTime = 0;\n    audioRef.current.addEventListener('timeupdate', function () {\n      setProgress(Math.floor(audioRef.current.currentTime));\n    });\n  }\n\n  function handleSeek(amount) {\n    audioRef.current.currentTime = amount;\n  }\n\n  var episode = episodeList[currentEpisodeIndex];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.playerContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/playing.svg\",\n        alt: \"Tocando agora\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Tocando agora\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), episode ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.currentEpisode,\n      children: [/*#__PURE__*/_jsxDEV(Image, {\n        width: 592,\n        height: 592,\n        src: episode.thumbnail,\n        objectFit: \"cover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: episode.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: episode.members\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.emptyPlayer,\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Selecione um podcast para ouvir\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: !episode ? styles.empty : '',\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.progress,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: convertDurationToTimeString(progress)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.slider,\n          children: episode ? /*#__PURE__*/_jsxDEV(Slider, {\n            max: episode.duration,\n            value: progress,\n            onChange: handleSeek,\n            trackStyle: {\n              backgroundColor: '#04d361'\n            },\n            railStyle: {\n              backgroundColor: '#9f75ff'\n            },\n            handleStyle: {\n              borderColor: '#04d361',\n              borderWidth: 4\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.emptySlider\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: convertDurationToTimeString((_episode$duration = episode === null || episode === void 0 ? void 0 : episode.duration) !== null && _episode$duration !== void 0 ? _episode$duration : 0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), episode && /*#__PURE__*/_jsxDEV(\"audio\", {\n        src: episode.url,\n        ref: audioRef,\n        loop: isLooping,\n        autoPlay: true,\n        onPlay: function onPlay() {\n          return setPlayingState(true);\n        },\n        onPause: function onPause() {\n          return setPlayingState(false);\n        },\n        onLoadedMetadata: setupProgressListener\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.buttons,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          disabled: !episode || episodeList.length === 1,\n          onClick: toggleShuffle,\n          className: isShuffling ? styles.isActive : '',\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/shuffle.svg\",\n            alt: \"Embaralhar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: playPrevious,\n          disabled: !episode || !hasPrevious,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/play-previous.svg\",\n            alt: \"Tocar Anterior\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: styles.playButton,\n          disabled: !episode,\n          onClick: togglePlay,\n          children: isPlaying ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/pause.svg\",\n            alt: \"Tocar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 39\n          }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/play.svg\",\n            alt: \"Tocar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 77\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: playNext,\n          disabled: !episode || !hasNext,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/play-next.svg\",\n            alt: \"Tocar Pr\\xF3ximo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          disabled: !episode,\n          onClick: toggleLoop,\n          className: isLooping ? styles.isActive : '',\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/repeat.svg\",\n            alt: \"Repetir\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Player, \"RpP76t0lwoq6vyGNgyzFFr55lzU=\");\n\n_c = Player;\n\nvar _c;\n\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"sources":["/home/carlos/Documentos/NLW5 - 2021/react/NLW05-podcastr/src/components/Player/index.tsx"],"names":["Image","useContext","useRef","useEffect","useState","Slider","PlayerContext","styles","convertDurationToTimeString","Player","audioRef","progress","setProgress","episodeList","currentEpisodeIndex","isPlaying","togglePlay","setPlayingState","playNext","playPrevious","hasNext","hasPrevious","isLooping","toggleLoop","isShuffling","toggleShuffle","current","play","pause","setupProgressListener","currentTime","addEventListener","Math","floor","handleSeek","amount","episode","playerContainer","currentEpisode","thumbnail","title","members","emptyPlayer","empty","slider","duration","backgroundColor","borderColor","borderWidth","emptySlider","url","buttons","length","isActive","playButton"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,YAAlB;AACA,SAASC,UAAT,EAAqBC,MAArB,EAA6BC,SAA7B,EAAwCC,QAAxC,QAAwD,OAAxD;AACA,OAAOC,MAAP,MAAmB,WAAnB;AAEA,OAAO,4BAAP;AAEA,SAASC,aAAT,QAA8B,8BAA9B;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,2BAAT,QAA4C,yCAA5C;AAEA,OAAO,SAASC,MAAT,GAAkB;AAAA;;AAAA;;AACrB,MAAMC,QAAQ,GAAGR,MAAM,CAAmB,IAAnB,CAAvB;;AADqB,kBAEWE,QAAQ,CAAC,CAAD,CAFnB;AAAA,MAEdO,QAFc;AAAA,MAEJC,WAFI;;AAAA,oBAkBjBX,UAAU,CAACK,aAAD,CAlBO;AAAA,MAKjBO,WALiB,eAKjBA,WALiB;AAAA,MAMjBC,mBANiB,eAMjBA,mBANiB;AAAA,MAOjBC,SAPiB,eAOjBA,SAPiB;AAAA,MAQjBC,UARiB,eAQjBA,UARiB;AAAA,MASjBC,eATiB,eASjBA,eATiB;AAAA,MAUjBC,QAViB,eAUjBA,QAViB;AAAA,MAWjBC,YAXiB,eAWjBA,YAXiB;AAAA,MAYjBC,OAZiB,eAYjBA,OAZiB;AAAA,MAajBC,WAbiB,eAajBA,WAbiB;AAAA,MAcjBC,SAdiB,eAcjBA,SAdiB;AAAA,MAejBC,UAfiB,eAejBA,UAfiB;AAAA,MAgBjBC,WAhBiB,eAgBjBA,WAhBiB;AAAA,MAiBjBC,aAjBiB,eAiBjBA,aAjBiB;;AAoBrBtB,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAI,CAACO,QAAQ,CAACgB,OAAd,EAAuB;AACnB;AACH;;AAED,QAAGX,SAAH,EAAc;AACVL,MAAAA,QAAQ,CAACgB,OAAT,CAAiBC,IAAjB;AACH,KAFD,MAEO;AACHjB,MAAAA,QAAQ,CAACgB,OAAT,CAAiBE,KAAjB;AACH;AACJ,GAVQ,EAUN,CAACb,SAAD,CAVM,CAAT;;AAYA,WAASc,qBAAT,GAAiC;AAC7BnB,IAAAA,QAAQ,CAACgB,OAAT,CAAiBI,WAAjB,GAA+B,CAA/B;AAEApB,IAAAA,QAAQ,CAACgB,OAAT,CAAiBK,gBAAjB,CAAkC,YAAlC,EAAgD,YAAM;AAClDnB,MAAAA,WAAW,CAACoB,IAAI,CAACC,KAAL,CAAWvB,QAAQ,CAACgB,OAAT,CAAiBI,WAA5B,CAAD,CAAX;AACH,KAFD;AAGH;;AAED,WAASI,UAAT,CAAoBC,MAApB,EAAoC;AAChCzB,IAAAA,QAAQ,CAACgB,OAAT,CAAiBI,WAAjB,GAAgCK,MAAhC;AACH;;AAED,MAAMC,OAAO,GAAGvB,WAAW,CAACC,mBAAD,CAA3B;AAEA,sBACI;AAAK,IAAA,SAAS,EAAEP,MAAM,CAAC8B,eAAvB;AAAA,4BACI;AAAA,8BACI;AAAK,QAAA,GAAG,EAAC,cAAT;AAAwB,QAAA,GAAG,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAMMD,OAAO,gBACL;AAAK,MAAA,SAAS,EAAE7B,MAAM,CAAC+B,cAAvB;AAAA,8BACI,QAAC,KAAD;AACI,QAAA,KAAK,EAAE,GADX;AAEI,QAAA,MAAM,EAAE,GAFZ;AAGI,QAAA,GAAG,EAAEF,OAAO,CAACG,SAHjB;AAII,QAAA,SAAS,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI;AAAA,kBAASH,OAAO,CAACI;AAAjB;AAAA;AAAA;AAAA;AAAA,cANJ,eAOI;AAAA,kBAAOJ,OAAO,CAACK;AAAf;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADK,gBAWL;AAAK,MAAA,SAAS,EAAElC,MAAM,CAACmC,WAAvB;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAjBR,eAwBI;AAAQ,MAAA,SAAS,EAAE,CAACN,OAAD,GAAW7B,MAAM,CAACoC,KAAlB,GAA0B,EAA7C;AAAA,8BACI;AAAK,QAAA,SAAS,EAAEpC,MAAM,CAACI,QAAvB;AAAA,gCACI;AAAA,oBAAOH,2BAA2B,CAACG,QAAD;AAAlC;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAEJ,MAAM,CAACqC,MAAvB;AAAA,oBACMR,OAAO,gBACD,QAAC,MAAD;AACI,YAAA,GAAG,EAAEA,OAAO,CAACS,QADjB;AAEI,YAAA,KAAK,EAAElC,QAFX;AAGI,YAAA,QAAQ,EAAEuB,UAHd;AAII,YAAA,UAAU,EAAE;AAAEY,cAAAA,eAAe,EAAC;AAAlB,aAJhB;AAKI,YAAA,SAAS,EAAE;AAAEA,cAAAA,eAAe,EAAE;AAAnB,aALf;AAMI,YAAA,WAAW,EAAE;AAAEC,cAAAA,WAAW,EAAE,SAAf;AAA0BC,cAAAA,WAAW,EAAE;AAAvC;AANjB;AAAA;AAAA;AAAA;AAAA,kBADC,gBAUD;AAAK,YAAA,SAAS,EAAEzC,MAAM,CAAC0C;AAAvB;AAAA;AAAA;AAAA;AAAA;AAXZ;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAiBI;AAAA,oBAAOzC,2BAA2B,sBAAC4B,OAAD,aAACA,OAAD,uBAACA,OAAO,CAAES,QAAV,iEAAsB,CAAtB;AAAlC;AAAA;AAAA;AAAA;AAAA,gBAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAqBMT,OAAO,iBACL;AACI,QAAA,GAAG,EAAEA,OAAO,CAACc,GADjB;AAEI,QAAA,GAAG,EAAExC,QAFT;AAGI,QAAA,IAAI,EAAEY,SAHV;AAII,QAAA,QAAQ,MAJZ;AAKI,QAAA,MAAM,EAAE;AAAA,iBAAML,eAAe,CAAC,IAAD,CAArB;AAAA,SALZ;AAMI,QAAA,OAAO,EAAE;AAAA,iBAAMA,eAAe,CAAC,KAAD,CAArB;AAAA,SANb;AAOI,QAAA,gBAAgB,EAAEY;AAPtB;AAAA;AAAA;AAAA;AAAA,cAtBR,eAiCI;AAAK,QAAA,SAAS,EAAEtB,MAAM,CAAC4C,OAAvB;AAAA,gCACI;AACI,UAAA,IAAI,EAAC,QADT;AAEI,UAAA,QAAQ,EAAE,CAACf,OAAD,IAAYvB,WAAW,CAACuC,MAAZ,KAAuB,CAFjD;AAGI,UAAA,OAAO,EAAE3B,aAHb;AAII,UAAA,SAAS,EAAED,WAAW,GAAGjB,MAAM,CAAC8C,QAAV,GAAqB,EAJ/C;AAAA,iCAMI;AAAK,YAAA,GAAG,EAAC,cAAT;AAAwB,YAAA,GAAG,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAUI;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,OAAO,EAAElC,YAA/B;AAA6C,UAAA,QAAQ,EAAE,CAACiB,OAAD,IAAY,CAACf,WAApE;AAAA,iCACI;AAAK,YAAA,GAAG,EAAC,oBAAT;AAA8B,YAAA,GAAG,EAAC;AAAlC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAVJ,eAcI;AACI,UAAA,IAAI,EAAC,QADT;AAEI,UAAA,SAAS,EAAEd,MAAM,CAAC+C,UAFtB;AAGI,UAAA,QAAQ,EAAE,CAAClB,OAHf;AAII,UAAA,OAAO,EAAEpB,UAJb;AAAA,oBAMMD,SAAS,gBAAG;AAAK,YAAA,GAAG,EAAC,YAAT;AAAsB,YAAA,GAAG,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA,kBAAH,gBAAyC;AAAK,YAAA,GAAG,EAAC,WAAT;AAAqB,YAAA,GAAG,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA;AANxD;AAAA;AAAA;AAAA;AAAA,gBAdJ,eAuBI;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,OAAO,EAAEG,QAA/B;AAAyC,UAAA,QAAQ,EAAE,CAACkB,OAAD,IAAY,CAAChB,OAAhE;AAAA,iCACI;AAAK,YAAA,GAAG,EAAC,gBAAT;AAA0B,YAAA,GAAG,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAvBJ,eA2BI;AACI,UAAA,IAAI,EAAC,QADT;AAEI,UAAA,QAAQ,EAAE,CAACgB,OAFf;AAGI,UAAA,OAAO,EAAEb,UAHb;AAII,UAAA,SAAS,EAAED,SAAS,GAAGf,MAAM,CAAC8C,QAAV,GAAqB,EAJ7C;AAAA,iCAMI;AAAK,YAAA,GAAG,EAAC,aAAT;AAAuB,YAAA,GAAG,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,gBA3BJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAjCJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAxBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiGH;;GA/Ie5C,M;;KAAAA,M","sourcesContent":["import Image from 'next/image';\nimport { useContext, useRef, useEffect, useState } from 'react';\nimport Slider from 'rc-slider';\n\nimport 'rc-slider/assets/index.css';\n\nimport { PlayerContext } from '../../contexts/PlayerContext';\n\nimport styles from './styles.module.scss'\nimport { convertDurationToTimeString } from '../../utils/convertDurationToTimeString';\n\nexport function Player() {\n    const audioRef = useRef<HTMLAudioElement>(null);\n    const [progress, setProgress] = useState(0);\n\n    const { \n        episodeList, \n        currentEpisodeIndex, \n        isPlaying, \n        togglePlay,\n        setPlayingState,\n        playNext,\n        playPrevious,\n        hasNext,\n        hasPrevious,\n        isLooping,\n        toggleLoop,\n        isShuffling,\n        toggleShuffle\n    } = useContext(PlayerContext)\n\n    useEffect(() => {\n        if (!audioRef.current) {\n            return;\n        }\n\n        if(isPlaying) {\n            audioRef.current.play();\n        } else {\n            audioRef.current.pause();\n        }\n    }, [isPlaying])\n\n    function setupProgressListener() {\n        audioRef.current.currentTime = 0;\n\n        audioRef.current.addEventListener('timeupdate', () => {\n            setProgress(Math.floor(audioRef.current.currentTime));\n        });\n    }\n\n    function handleSeek(amount: number) {\n        audioRef.current.currentTime  = amount\n    }\n\n    const episode = episodeList[currentEpisodeIndex]\n\n    return (\n        <div className={styles.playerContainer}>\n            <header>\n                <img src=\"/playing.svg\" alt=\"Tocando agora\"/>\n                <strong>Tocando agora</strong>\n            </header>\n\n            { episode ? (\n                <div className={styles.currentEpisode}>\n                    <Image \n                        width={592} \n                        height={592} \n                        src={episode.thumbnail} \n                        objectFit=\"cover\" />\n                    <strong>{episode.title}</strong>\n                    <span>{episode.members}</span>\n                </div>\n            ) : (\n                <div className={styles.emptyPlayer}>\n                    <strong>Selecione um podcast para ouvir</strong>\n                </div>\n            )}\n            \n            \n\n            <footer className={!episode ? styles.empty : ''}>\n                <div className={styles.progress}>\n                    <span>{convertDurationToTimeString(progress)}</span>\n                    <div className={styles.slider}>\n                        { episode ? (\n                                <Slider\n                                    max={episode.duration}\n                                    value={progress}\n                                    onChange={handleSeek}\n                                    trackStyle={{ backgroundColor:'#04d361' }}\n                                    railStyle={{ backgroundColor: '#9f75ff' }}\n                                    handleStyle={{ borderColor: '#04d361', borderWidth: 4 }}\n                                />\n                            ) : (\n                                <div className={styles.emptySlider} />\n                            ) \n                        }\n                    </div>\n                    <span>{convertDurationToTimeString(episode?.duration ?? 0)}</span>\n                </div>\n\n                { episode && (\n                    <audio \n                        src={episode.url}\n                        ref={audioRef}\n                        loop={isLooping}\n                        autoPlay\n                        onPlay={() => setPlayingState(true)}\n                        onPause={() => setPlayingState(false)}\n                        onLoadedMetadata={setupProgressListener}\n                    />\n                ) }\n\n                <div className={styles.buttons}>\n                    <button \n                        type=\"button\" \n                        disabled={!episode || episodeList.length === 1} \n                        onClick={toggleShuffle}\n                        className={isShuffling ? styles.isActive : ''}\n                    >\n                        <img src=\"/shuffle.svg\" alt=\"Embaralhar\"/>\n                    </button>\n\n                    <button type=\"button\" onClick={playPrevious} disabled={!episode || !hasPrevious}>\n                        <img src=\"/play-previous.svg\" alt=\"Tocar Anterior\"/>\n                    </button>\n\n                    <button \n                        type=\"button\" \n                        className={styles.playButton} \n                        disabled={!episode} \n                        onClick={togglePlay}\n                    >\n                        { isPlaying ? <img src=\"/pause.svg\" alt=\"Tocar\"/> : <img src=\"/play.svg\" alt=\"Tocar\"/>}\n                    </button>\n\n                    <button type=\"button\" onClick={playNext} disabled={!episode || !hasNext}>\n                        <img src=\"/play-next.svg\" alt=\"Tocar Próximo\"/>\n                    </button>\n\n                    <button \n                        type=\"button\" \n                        disabled={!episode}\n                        onClick={toggleLoop}\n                        className={isLooping ? styles.isActive : ''}\n                    >\n                        <img src=\"/repeat.svg\" alt=\"Repetir\"/>\n                    </button>\n                </div>\n            </footer>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}