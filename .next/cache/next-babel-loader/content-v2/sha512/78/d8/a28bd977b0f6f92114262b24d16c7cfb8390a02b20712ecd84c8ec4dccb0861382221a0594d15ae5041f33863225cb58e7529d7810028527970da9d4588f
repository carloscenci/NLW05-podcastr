{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/carlos/Documentos/NLW5 - 2021/react/NLW05-podcastr/src/contexts/PlayerContext.tsx\";\nimport { createContext, useState } from 'react';\nexport const PlayerContext = /*#__PURE__*/createContext({});\nexport function PlayerContextProvider({\n  children\n}) {\n  const {\n    0: episodeList,\n    1: setEpisodeList\n  } = useState([]);\n  const {\n    0: currentEpisodeIndex,\n    1: setcurrentEpisodeIndex\n  } = useState(0);\n  const {\n    0: isPlaying,\n    1: setIsPlaying\n  } = useState(false);\n\n  function play(episode) {\n    setEpisodeList([episode]);\n    setcurrentEpisodeIndex(0);\n    setIsPlaying(true);\n  }\n\n  function playList(list, index) {\n    setEpisodeList(list);\n    setcurrentEpisodeIndex(index);\n    setIsPlaying(true);\n  }\n\n  function togglePlay() {\n    setIsPlaying(!isPlaying);\n  }\n\n  function setPlayingState(state) {\n    setIsPlaying(state);\n  }\n\n  return /*#__PURE__*/_jsxDEV(PlayerContext.Provider, {\n    value: {\n      episodeList,\n      currentEpisodeIndex,\n      play,\n      isPlaying,\n      togglePlay,\n      setPlayingState\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["/home/carlos/Documentos/NLW5 - 2021/react/NLW05-podcastr/src/contexts/PlayerContext.tsx"],"names":["createContext","useState","PlayerContext","PlayerContextProvider","children","episodeList","setEpisodeList","currentEpisodeIndex","setcurrentEpisodeIndex","isPlaying","setIsPlaying","play","episode","playList","list","index","togglePlay","setPlayingState","state"],"mappings":";;AAAA,SAASA,aAAT,EAAwBC,QAAxB,QAAmD,OAAnD;AAqBA,OAAO,MAAMC,aAAa,gBAAGF,aAAa,CAAC,EAAD,CAAnC;AAMP,OAAO,SAASG,qBAAT,CAA+B;AAAEC,EAAAA;AAAF,CAA/B,EAA0E;AAC7E,QAAM;AAAA,OAACC,WAAD;AAAA,OAAcC;AAAd,MAAgCL,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM;AAAA,OAACM,mBAAD;AAAA,OAAsBC;AAAtB,MAAgDP,QAAQ,CAAC,CAAD,CAA9D;AACA,QAAM;AAAA,OAAEQ,SAAF;AAAA,OAAaC;AAAb,MAA8BT,QAAQ,CAAC,KAAD,CAA5C;;AAEA,WAASU,IAAT,CAAcC,OAAd,EAAgC;AAC5BN,IAAAA,cAAc,CAAC,CAACM,OAAD,CAAD,CAAd;AACAJ,IAAAA,sBAAsB,CAAC,CAAD,CAAtB;AACAE,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACH;;AAED,WAASG,QAAT,CAAkBC,IAAlB,EAAmCC,KAAnC,EAAkD;AAC9CT,IAAAA,cAAc,CAACQ,IAAD,CAAd;AACAN,IAAAA,sBAAsB,CAACO,KAAD,CAAtB;AACAL,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACH;;AAED,WAASM,UAAT,GAAsB;AAClBN,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACH;;AAED,WAASQ,eAAT,CAAyBC,KAAzB,EAAyC;AACrCR,IAAAA,YAAY,CAACQ,KAAD,CAAZ;AACH;;AAED,sBACI,QAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AAC/Bb,MAAAA,WAD+B;AAE/BE,MAAAA,mBAF+B;AAG/BI,MAAAA,IAH+B;AAI/BF,MAAAA,SAJ+B;AAK/BO,MAAAA,UAL+B;AAM/BC,MAAAA;AAN+B,KAA/B;AAAA,cAQMb;AARN;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH","sourcesContent":["import { createContext, useState, ReactNode } from 'react';\n\ntype Episode = {\n    title: string;\n    members: string;\n    thumbnail: string;\n    duration: number;\n    url: string;\n}\n\ntype PlayerContextData = {\n    episodeList: Episode[];\n    currentEpisodeIndex: number;\n    isPlaying: boolean;\n    play: (episode: Episode) => void;\n    setPlayingState: (state: boolean) => void;\n    togglePlay: () => void;\n    playList: (list: Episode[], index: number) => void;\n    \n};\n\nexport const PlayerContext = createContext({} as PlayerContextData);\n\ntype PlayerContextProviderProps = {\n    children: ReactNode\n}\n\nexport function PlayerContextProvider({ children } : PlayerContextProviderProps) {\n    const [episodeList, setEpisodeList] = useState([]);\n    const [currentEpisodeIndex, setcurrentEpisodeIndex] = useState(0);\n    const [ isPlaying, setIsPlaying ] = useState(false);\n\n    function play(episode: Episode) {\n        setEpisodeList([episode]);\n        setcurrentEpisodeIndex(0);\n        setIsPlaying(true);\n    }\n\n    function playList(list: Episode[], index: number) {\n        setEpisodeList(list);\n        setcurrentEpisodeIndex(index);\n        setIsPlaying(true);\n    }\n\n    function togglePlay() {\n        setIsPlaying(!isPlaying)\n    }\n\n    function setPlayingState(state: boolean) {\n        setIsPlaying(state);\n    }\n\n    return (\n        <PlayerContext.Provider value={{ \n        episodeList, \n        currentEpisodeIndex, \n        play, \n        isPlaying, \n        togglePlay,\n        setPlayingState\n        }}>\n            { children }\n        </PlayerContext.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}