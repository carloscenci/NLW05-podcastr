{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/carlos/Documentos/NLW5 - 2021/react/NLW05-podcastr/src/components/Player/index.tsx\";\nimport Image from 'next/image';\nimport { useContext, useRef, useEffect, useState } from 'react';\nimport Slider from 'rc-slider';\nimport 'rc-slider/assets/index.css';\nimport { PlayerContext } from '../../contexts/PlayerContext';\nimport styles from './styles.module.scss';\nimport { convertDurationToTimeString } from '../../utils/convertDurationToTimeString';\nexport function Player() {\n  var _episode$duration;\n\n  const audioRef = useRef(null);\n  const {\n    0: progress,\n    1: setProgress\n  } = useState(0);\n  const {\n    episodeList,\n    currentEpisodeIndex,\n    isPlaying,\n    togglePlay,\n    setPlayingState,\n    playNext,\n    playPrevious,\n    hasNext,\n    hasPrevious,\n    isLooping,\n    toggleLoop,\n    isShuffling,\n    toggleShuffle,\n    clearPlayerState\n  } = useContext(PlayerContext);\n  useEffect(() => {\n    if (!audioRef.current) {\n      return;\n    }\n\n    if (isPlaying) {\n      audioRef.current.play();\n    } else {\n      audioRef.current.pause();\n    }\n  }, [isPlaying]);\n\n  function setupProgressListener() {\n    audioRef.current.currentTime = 0;\n    audioRef.current.addEventListener('timeupdate', () => {\n      setProgress(Math.floor(audioRef.current.currentTime));\n    });\n  }\n\n  function handleSeek(amount) {\n    audioRef.current.currentTime = amount;\n    setProgress(amount);\n  }\n\n  function handleEpisodeEnded() {\n    if (hasNext) {\n      playNext();\n    } else {}\n  }\n\n  const episode = episodeList[currentEpisodeIndex];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.playerContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/playing.svg\",\n        alt: \"Tocando agora\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Tocando agora\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), episode ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.currentEpisode,\n      children: [/*#__PURE__*/_jsxDEV(Image, {\n        width: 592,\n        height: 592,\n        src: episode.thumbnail,\n        objectFit: \"cover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: episode.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: episode.members\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.emptyPlayer,\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Selecione um podcast para ouvir\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: !episode ? styles.empty : '',\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.progress,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: convertDurationToTimeString(progress)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.slider,\n          children: episode ? /*#__PURE__*/_jsxDEV(Slider, {\n            max: episode.duration,\n            value: progress,\n            onChange: handleSeek,\n            trackStyle: {\n              backgroundColor: '#04d361'\n            },\n            railStyle: {\n              backgroundColor: '#9f75ff'\n            },\n            handleStyle: {\n              borderColor: '#04d361',\n              borderWidth: 4\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.emptySlider\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: convertDurationToTimeString((_episode$duration = episode === null || episode === void 0 ? void 0 : episode.duration) !== null && _episode$duration !== void 0 ? _episode$duration : 0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), episode && /*#__PURE__*/_jsxDEV(\"audio\", {\n        src: episode.url,\n        ref: audioRef,\n        loop: isLooping,\n        autoPlay: true,\n        onEnded: handleEpisodeEnded,\n        onPlay: () => setPlayingState(true),\n        onPause: () => setPlayingState(false),\n        onLoadedMetadata: setupProgressListener\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.buttons,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          disabled: !episode || episodeList.length === 1,\n          onClick: toggleShuffle,\n          className: isShuffling ? styles.isActive : '',\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/shuffle.svg\",\n            alt: \"Embaralhar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: playPrevious,\n          disabled: !episode || !hasPrevious,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/play-previous.svg\",\n            alt: \"Tocar Anterior\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: styles.playButton,\n          disabled: !episode,\n          onClick: togglePlay,\n          children: isPlaying ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/pause.svg\",\n            alt: \"Tocar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 39\n          }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/play.svg\",\n            alt: \"Tocar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 77\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: playNext,\n          disabled: !episode || !hasNext,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/play-next.svg\",\n            alt: \"Tocar Pr\\xF3ximo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          disabled: !episode,\n          onClick: toggleLoop,\n          className: isLooping ? styles.isActive : '',\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/repeat.svg\",\n            alt: \"Repetir\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["/home/carlos/Documentos/NLW5 - 2021/react/NLW05-podcastr/src/components/Player/index.tsx"],"names":["Image","useContext","useRef","useEffect","useState","Slider","PlayerContext","styles","convertDurationToTimeString","Player","audioRef","progress","setProgress","episodeList","currentEpisodeIndex","isPlaying","togglePlay","setPlayingState","playNext","playPrevious","hasNext","hasPrevious","isLooping","toggleLoop","isShuffling","toggleShuffle","clearPlayerState","current","play","pause","setupProgressListener","currentTime","addEventListener","Math","floor","handleSeek","amount","handleEpisodeEnded","episode","playerContainer","currentEpisode","thumbnail","title","members","emptyPlayer","empty","slider","duration","backgroundColor","borderColor","borderWidth","emptySlider","url","buttons","length","isActive","playButton"],"mappings":"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","sourcesContent":["import Image from 'next/image';\nimport { useContext, useRef, useEffect, useState } from 'react';\nimport Slider from 'rc-slider';\n\nimport 'rc-slider/assets/index.css';\n\nimport { PlayerContext } from '../../contexts/PlayerContext';\n\nimport styles from './styles.module.scss'\nimport { convertDurationToTimeString } from '../../utils/convertDurationToTimeString';\n\nexport function Player() {\n    const audioRef = useRef<HTMLAudioElement>(null);\n    const [progress, setProgress] = useState(0);\n\n    const { \n        episodeList, \n        currentEpisodeIndex, \n        isPlaying, \n        togglePlay,\n        setPlayingState,\n        playNext,\n        playPrevious,\n        hasNext,\n        hasPrevious,\n        isLooping,\n        toggleLoop,\n        isShuffling,\n        toggleShuffle,\n        clearPlayerState\n    } = useContext(PlayerContext)\n\n    useEffect(() => {\n        if (!audioRef.current) {\n            return;\n        }\n\n        if(isPlaying) {\n            audioRef.current.play();\n        } else {\n            audioRef.current.pause();\n        }\n    }, [isPlaying])\n\n    function setupProgressListener() {\n        audioRef.current.currentTime = 0;\n\n        audioRef.current.addEventListener('timeupdate', () => {\n            setProgress(Math.floor(audioRef.current.currentTime));\n        });\n    }\n\n    function handleSeek(amount: number) {\n        audioRef.current.currentTime  = amount;\n        setProgress(amount);\n    }\n\n    function handleEpisodeEnded() {\n        if(hasNext) {\n            playNext()\n        } else {\n\n        }\n    }\n\n    const episode = episodeList[currentEpisodeIndex]\n\n    return (\n        <div className={styles.playerContainer}>\n            <header>\n                <img src=\"/playing.svg\" alt=\"Tocando agora\"/>\n                <strong>Tocando agora</strong>\n            </header>\n\n            { episode ? (\n                <div className={styles.currentEpisode}>\n                    <Image \n                        width={592} \n                        height={592} \n                        src={episode.thumbnail} \n                        objectFit=\"cover\" />\n                    <strong>{episode.title}</strong>\n                    <span>{episode.members}</span>\n                </div>\n            ) : (\n                <div className={styles.emptyPlayer}>\n                    <strong>Selecione um podcast para ouvir</strong>\n                </div>\n            )}\n            \n            \n\n            <footer className={!episode ? styles.empty : ''}>\n                <div className={styles.progress}>\n                    <span>{convertDurationToTimeString(progress)}</span>\n                    <div className={styles.slider}>\n                        { episode ? (\n                                <Slider\n                                    max={episode.duration}\n                                    value={progress}\n                                    onChange={handleSeek}\n                                    trackStyle={{ backgroundColor:'#04d361' }}\n                                    railStyle={{ backgroundColor: '#9f75ff' }}\n                                    handleStyle={{ borderColor: '#04d361', borderWidth: 4 }}\n                                />\n                            ) : (\n                                <div className={styles.emptySlider} />\n                            ) \n                        }\n                    </div>\n                    <span>{convertDurationToTimeString(episode?.duration ?? 0)}</span>\n                </div>\n\n                { episode && (\n                    <audio \n                        src={episode.url}\n                        ref={audioRef}\n                        loop={isLooping}\n                        autoPlay\n                        onEnded={handleEpisodeEnded}\n                        onPlay={() => setPlayingState(true)}\n                        onPause={() => setPlayingState(false)}\n                        onLoadedMetadata={setupProgressListener}\n                    />\n                ) }\n\n                <div className={styles.buttons}>\n                    <button \n                        type=\"button\" \n                        disabled={!episode || episodeList.length === 1} \n                        onClick={toggleShuffle}\n                        className={isShuffling ? styles.isActive : ''}\n                    >\n                        <img src=\"/shuffle.svg\" alt=\"Embaralhar\"/>\n                    </button>\n\n                    <button type=\"button\" onClick={playPrevious} disabled={!episode || !hasPrevious}>\n                        <img src=\"/play-previous.svg\" alt=\"Tocar Anterior\"/>\n                    </button>\n\n                    <button \n                        type=\"button\" \n                        className={styles.playButton} \n                        disabled={!episode} \n                        onClick={togglePlay}\n                    >\n                        { isPlaying ? <img src=\"/pause.svg\" alt=\"Tocar\"/> : <img src=\"/play.svg\" alt=\"Tocar\"/>}\n                    </button>\n\n                    <button type=\"button\" onClick={playNext} disabled={!episode || !hasNext}>\n                        <img src=\"/play-next.svg\" alt=\"Tocar Próximo\"/>\n                    </button>\n\n                    <button \n                        type=\"button\" \n                        disabled={!episode}\n                        onClick={toggleLoop}\n                        className={isLooping ? styles.isActive : ''}\n                    >\n                        <img src=\"/repeat.svg\" alt=\"Repetir\"/>\n                    </button>\n                </div>\n            </footer>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}