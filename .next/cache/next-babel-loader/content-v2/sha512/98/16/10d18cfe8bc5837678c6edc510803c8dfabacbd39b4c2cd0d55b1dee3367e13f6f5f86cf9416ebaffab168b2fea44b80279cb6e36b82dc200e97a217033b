{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/carlos/Documentos/NLW5 - 2021/react/NLW05-podcastr/src/contexts/PlayerContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from 'react';\nexport var PlayerContext = /*#__PURE__*/createContext({});\nexport function PlayerContextProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState([]),\n      episodeList = _useState[0],\n      setEpisodeList = _useState[1];\n\n  var _useState2 = useState(0),\n      currentEpisodeIndex = _useState2[0],\n      setcurrentEpisodeIndex = _useState2[1];\n\n  var _useState3 = useState(false),\n      isPlaying = _useState3[0],\n      setIsPlaying = _useState3[1];\n\n  function play(episode) {\n    setEpisodeList([episode]);\n    setcurrentEpisodeIndex(0);\n    setIsPlaying(true);\n  }\n\n  function playList(list, index) {\n    setEpisodeList(list);\n    setcurrentEpisodeIndex(index);\n    setIsPlaying(true);\n  }\n\n  function togglePlay() {\n    setIsPlaying(!isPlaying);\n  }\n\n  function setPlayingState(state) {\n    setIsPlaying(state);\n  }\n\n  function playNext() {\n    setcurrentEpisodeIndex(currentEpisodeIndex + 1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(PlayerContext.Provider, {\n    value: {\n      episodeList: episodeList,\n      currentEpisodeIndex: currentEpisodeIndex,\n      play: play,\n      isPlaying: isPlaying,\n      togglePlay: togglePlay,\n      setPlayingState: setPlayingState,\n      playList: playList\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PlayerContextProvider, \"NpQnykHgRLb1tUYmJ42kE3CWW2A=\");\n\n_c = PlayerContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlayerContextProvider\");","map":{"version":3,"sources":["/home/carlos/Documentos/NLW5 - 2021/react/NLW05-podcastr/src/contexts/PlayerContext.tsx"],"names":["createContext","useState","PlayerContext","PlayerContextProvider","children","episodeList","setEpisodeList","currentEpisodeIndex","setcurrentEpisodeIndex","isPlaying","setIsPlaying","play","episode","playList","list","index","togglePlay","setPlayingState","state","playNext"],"mappings":";;;;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,QAAmD,OAAnD;AAoBA,OAAO,IAAMC,aAAa,gBAAGF,aAAa,CAAC,EAAD,CAAnC;AAMP,OAAO,SAASG,qBAAT,OAA0E;AAAA;;AAAA,MAAzCC,QAAyC,QAAzCA,QAAyC;;AAAA,kBACvCH,QAAQ,CAAC,EAAD,CAD+B;AAAA,MACtEI,WADsE;AAAA,MACzDC,cADyD;;AAAA,mBAEvBL,QAAQ,CAAC,CAAD,CAFe;AAAA,MAEtEM,mBAFsE;AAAA,MAEjDC,sBAFiD;;AAAA,mBAGzCP,QAAQ,CAAC,KAAD,CAHiC;AAAA,MAGrEQ,SAHqE;AAAA,MAG1DC,YAH0D;;AAK7E,WAASC,IAAT,CAAcC,OAAd,EAAgC;AAC5BN,IAAAA,cAAc,CAAC,CAACM,OAAD,CAAD,CAAd;AACAJ,IAAAA,sBAAsB,CAAC,CAAD,CAAtB;AACAE,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACH;;AAED,WAASG,QAAT,CAAkBC,IAAlB,EAAmCC,KAAnC,EAAkD;AAC9CT,IAAAA,cAAc,CAACQ,IAAD,CAAd;AACAN,IAAAA,sBAAsB,CAACO,KAAD,CAAtB;AACAL,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACH;;AAED,WAASM,UAAT,GAAsB;AAClBN,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACH;;AAED,WAASQ,eAAT,CAAyBC,KAAzB,EAAyC;AACrCR,IAAAA,YAAY,CAACQ,KAAD,CAAZ;AACH;;AAED,WAASC,QAAT,GAAoB;AAChBX,IAAAA,sBAAsB,CAACD,mBAAmB,GAAG,CAAvB,CAAtB;AACH;;AAED,sBACI,QAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AAC/BF,MAAAA,WAAW,EAAXA,WAD+B;AAE/BE,MAAAA,mBAAmB,EAAnBA,mBAF+B;AAG/BI,MAAAA,IAAI,EAAJA,IAH+B;AAI/BF,MAAAA,SAAS,EAATA,SAJ+B;AAK/BO,MAAAA,UAAU,EAAVA,UAL+B;AAM/BC,MAAAA,eAAe,EAAfA,eAN+B;AAO/BJ,MAAAA,QAAQ,EAARA;AAP+B,KAA/B;AAAA,cASMT;AATN;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH;;GA1CeD,qB;;KAAAA,qB","sourcesContent":["import { createContext, useState, ReactNode } from 'react';\n\ntype Episode = {\n    title: string;\n    members: string;\n    thumbnail: string;\n    duration: number;\n    url: string;\n}\n\ntype PlayerContextData = {\n    episodeList: Episode[];\n    currentEpisodeIndex: number;\n    isPlaying: boolean;\n    play: (episode: Episode) => void;\n    setPlayingState: (state: boolean) => void;\n    togglePlay: () => void;\n    playList: (list: Episode[], index: number) => void;\n};\n\nexport const PlayerContext = createContext({} as PlayerContextData);\n\ntype PlayerContextProviderProps = {\n    children: ReactNode\n}\n\nexport function PlayerContextProvider({ children } : PlayerContextProviderProps) {\n    const [episodeList, setEpisodeList] = useState([]);\n    const [currentEpisodeIndex, setcurrentEpisodeIndex] = useState(0);\n    const [ isPlaying, setIsPlaying ] = useState(false);\n\n    function play(episode: Episode) {\n        setEpisodeList([episode]);\n        setcurrentEpisodeIndex(0);\n        setIsPlaying(true);\n    }\n\n    function playList(list: Episode[], index: number) {\n        setEpisodeList(list);\n        setcurrentEpisodeIndex(index);\n        setIsPlaying(true);\n    }\n\n    function togglePlay() {\n        setIsPlaying(!isPlaying)\n    }\n\n    function setPlayingState(state: boolean) {\n        setIsPlaying(state);\n    }\n\n    function playNext() {\n        setcurrentEpisodeIndex(currentEpisodeIndex + 1);\n    }\n\n    return (\n        <PlayerContext.Provider value={{ \n        episodeList, \n        currentEpisodeIndex, \n        play, \n        isPlaying, \n        togglePlay,\n        setPlayingState,\n        playList\n        }}>\n            { children }\n        </PlayerContext.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}